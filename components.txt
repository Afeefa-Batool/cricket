- ./firebase.js: import { initializeApp } from "firebase/app";import { getAuth } from "firebase/auth";import { getDatabase, ref, onValue, set, update } from "firebase/database";// Your web app's Firebase configurationconst firebaseConfig = {    apiKey: "AIzaSyCvw0N9T-v6cw_LbfD29ggVqMHBSC3aNqE",    authDomain: "oz-graphics-overlay-firebase.firebaseapp.com",    databaseURL: "https://oz-graphics-overlay-firebase-default-rtdb.europe-west1.firebasedatabase.app",    projectId: "oz-graphics-overlay-firebase",    storageBucket: "oz-graphics-overlay-firebase.appspot.com",    messagingSenderId: "739566702799",    appId: "1:739566702799:web:1972276008caa450bae7ba",    measurementId: "G-E39X5HDDEB"};// Initialize Firebaseconst app = initializeApp(firebaseConfig);const auth = getAuth(app);const db = getDatabase(app);export { auth, db, ref, set };export const getGameById = async (gameId) => {    const gameRef = ref(db, `games/${gameId}`);    return new Promise((resolve, reject) => {        onValue(            gameRef,            (snapshot) => {                const gameData = snapshot.val();                if (gameData) {                    resolve({ id: gameId, ...gameData });                } else {                    reject(new Error(`id sent: ${gameId}`));                }            },            (error) => {                reject(error);            }        );    });};export const updateGameTime = async (gameId, time, extraTime) => {    const gameRef = ref(db, `games/${gameId}`);    await update(gameRef, { time, extraTime, running: true });};
- components\AddGameForm.js: "import { useState } from 'react';import { useRouter } from 'next/router';import { ref, push, update } from 'firebase/database';import { db } from '../firebase';const AddGameForm = ({ gameId, gameData }) => {    const [homeTeam, setHomeTeam] = useState(gameData?.homeTeam || '');    const [awayTeam, setAwayTeam] = useState(gameData?.awayTeam || '');    const router = useRouter();    const handleSubmit = async (e) => {        e.preventDefault();        const game = {            homeTeam,            awayTeam,        };        const gamesRef = ref(db, 'games');        if (gameId) {            const gameRef = ref(db, `games/${gameId}`);            try {                await update(gameRef, game);                router.push(`/game/${gameId}`);            } catch (err) {                console.error(err.message);            }        } else {            try {                const newGameRef = await push(gamesRef, game);                router.push(`/game/${newGameRef.key}`);            } catch (err) {                console.error(err.message);            }        }    };    return (        <form onSubmit={handleSubmit}>            <h2>{gameId ? 'Edit Game' : 'Add New Game'}</h2>            <div className="match">                <div className="match-info">                    <input                        type="text"                        placeholder="Home Team"                        value={homeTeam}                        onChange={(e) => setHomeTeam(e.target.value)}                    />                    <input                        type="text"                        placeholder="Away Team"                        value={awayTeam}                        onChange={(e) => setAwayTeam(e.target.value)}                    />                </div>                <button type="submit">Add Game</button>            </div>        </form>    );};export default AddGameForm;"
- components\Admin.js: "import { useEffect, useState } from "react";import { useRouter } from "next/router";import { ref, update, push, onValue } from "firebase/database";import { db } from "../firebase";import OngoingGame from "./OngoingGame";import Clock from "./Clock";const Admin = ({ user }) => {    const [games, setGames] = useState([]);    const [selectedGame, setSelectedGame] = useState(null);    const router = useRouter();    useEffect(() => {        const gamesRef = ref(db, "games");        const unsubscribe = onValue(gamesRef, (snapshot) => {            const gamesData = snapshot.val();            const gamesArray = [];            for (const id in gamesData) {                gamesArray.push({ id, ...gamesData[id] });            }            setGames(gamesArray);        });        return () => {            unsubscribe();        };    }, []);    const handleGameSelect = (e) => {        const gameId = e.target.value;        const game = games.find((game) => game.id === gameId);        setSelectedGame(game);    };    const updateGameInDB = async (game) => {        if (!user) return;        const gameRef = ref(db, `games/${game.id}`);        try {            await update(gameRef, game);        } catch (err) {            console.error(err.message);        }    };    const addNewGameToDB = async (game) => {        if (!user) return;        const gamesRef = ref(db, "games");        try {            const newGameRef = await push(gamesRef, game);            setSelectedGame({ id: newGameRef.key, ...game });            router.push(`/game/${newGameRef.key}`);        } catch (err) {            console.error(err.message);        }    };    return (        <div className="admin">            <h1>Admin Panel</h1>            {selectedGame && <Clock game={selectedGame} />}            <OngoingGame                games={games}                game={selectedGame}                handleGameSelect={handleGameSelect}                updateGameInDB={updateGameInDB}                addNewGameToDB={addNewGameToDB}                user={user}            />        </div>    );};export default Admin;"
- components\Clock.js: "import { useState, useEffect } from 'react';import { ref, onValue, update } from 'firebase/database';import { db } from '../firebase';import useTimer from "./useTimer";function Clock({ game }) {    const { time, extraTime, isRunning, setIsRunning, setTime, setExtraTime } = useTimer(game);    const [localGoals, setLocalGoals] = useState(game.homeScore);    const [visitorGoals, setVisitorGoals] = useState(game.awayScore);    useEffect(() => {        setTime(game.time);        setExtraTime(game.extraTime);    }, [game]);    useEffect(() => {        const gameRef = ref(db, `games/${game.id}`);        const unsubscribe = onValue(gameRef, (snapshot) => {            const gameData = snapshot.val();            setTime(gameData.time);            setExtraTime(gameData.extraTime);        });        return () => {            unsubscribe();        };    }, [game.id]);    const formatTime = (timeInSeconds) => {        const minutes = Math.floor(timeInSeconds / 60);        const seconds = timeInSeconds % 60;        return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;    };    const updateGameScore = async () => {        console.log('updateGameScore called')        const gameRef = ref(db, `games/${game.id}`);        try {            await update(gameRef, {                homeScore: localGoals,                awayScore: visitorGoals,            });        } catch (err) {            console.error(err.message);        }    };    const updateGameRunningStatus = async (runningStatus) => {        const gameRef = ref(db, `games/${game.id}`);        try {            await update(gameRef, { running: runningStatus });            setIsRunning(runningStatus);        } catch (err) {            console.error(err.message);        }    };    const resetTimerInDB = async () => {        const gameRef = ref(db, `games/${game.id}`);        try {            await update(gameRef, { time: 0, extraTime: 0, running: false });        } catch (err) {            console.error(err.message);        }    };    return (        <div className="match">            <div className="match-info">                <span className="team-name local-team t-border-left">                    {game.homeTeam}                </span>                <input                    type="number"                    value={localGoals}                    onChange={(e) => setLocalGoals(parseInt(e.target.value))}                />                <span>:</span>                <input                    type="number"                    value={visitorGoals}                    onChange={(e) => setVisitorGoals(parseInt(e.target.value))}                />                <span className="team-name visitor-team t-border-right">                    {game.awayTeam}                </span>            </div>            <div className="clock">                <span className="time">{formatTime(time)}</span>                {extraTime > 0 && (                    <span className="extra-time">+{formatTime(extraTime)}</span>                )}            </div>            <div className="timer-controls">                <button onClick={() => updateGameRunningStatus(true)}>Start</button>                <button onClick={() => updateGameRunningStatus(false)}>Stop</button>                <button onClick={resetTimerInDB}>Reset</button>                <button onClick={updateGameScore}>Update Score</button>            </div>        </div>    );}export default Clock;"
- components\GameItem.js: "import React from 'react';import Link from 'next/link';import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';import { faEye, faPencilAlt } from '@fortawesome/free-solid-svg-icons';const GameItem = ({ game }) => {    const id = game.id    return (        <tr>            <td>{game.homeTeam}</td>            <td>{game.awayTeam}</td>            <td>                <Link href={`/game/${game.id}`}>                    <FontAwesomeIcon icon={faEye} />                </Link>                <Link href="/admingame/[id]" as={`/admingame/${game.id}`}>                    <FontAwesomeIcon icon={faPencilAlt} />                </Link>            </td>        </tr>    );};export default GameItem;"
- components\GameList.js: "import { useEffect, useState } from 'react';import { onValue, ref } from 'firebase/database';import { db } from '../firebase';import GameItem from './GameItem';// Import at the top of the fileimport Link from 'next/link';function GameList() {    const [games, setGames] = useState([]);    useEffect(() => {        const gamesRef = ref(db, 'games');        const unsubscribe = onValue(gamesRef, (snapshot) => {            const gamesData = snapshot.val();            const gamesArray = [];            for (const id in gamesData) {                gamesArray.push({ id, ...gamesData[id] });            }            setGames(gamesArray);        });        return () => {            unsubscribe();        };    }, []);    return (        <div className="list-games">            <h2>Games</h2>            <Link href="/admin">                <button>Add New Game</button>            </Link>            <table>                <thead>                    <tr>                        <th>Home Team</th>                        <th>Away Team</th>                        <th>Actions</th>                    </tr>                </thead>                <tbody>                    {games.map((game) => (                        <GameItem key={game.id} game={game} />                    ))}                </tbody>            </table>        </div>    );}export default GameList;"
- components\LoginForm.js: "import { useState } from 'react';import { signInWithEmailAndPassword } from 'firebase/auth';import { useRouter } from 'next/router';import { auth } from '../firebase'; // Import the auth instanceconst LoginForm = () => {    const [email, setEmail] = useState('');    const [password, setPassword] = useState('');    const [error, setError] = useState('');    const router = useRouter();    const handleSubmit = async (e) => {        e.preventDefault();        try {            await signInWithEmailAndPassword(auth, email, password); // Use the imported auth instance            router.push('/');        } catch (err) {            setError(err.message);        }    };    return (        <form onSubmit={handleSubmit}>            <h2>Login</h2>            {error && <p>{error}</p>}            <input                type="email"                placeholder="Email"                value={email}                onChange={(e) => setEmail(e.target.value)}            />            <input                type="password"                placeholder="Password"                value={password}                onChange={(e) => setPassword(e.target.value)}            />            <button type="submit">Login</button>        </form>    );};export default LoginForm;"
- components\Navbar.js: "import { useState } from 'react';import { getAuth, signOut as signOutUser } from 'firebase/auth';import Link from 'next/link';const Navbar = ({ user }) => {    const signOut = async () => {        try {            await signOutUser(getAuth());        } catch (err) {            console.error(err.message);        }    };    return (        <nav>            <Link href="/">                Home            </Link>            {user ? (                <>                    <Link href="/admin">                        Admin                    </Link>                    <button onClick={signOut}>Logout</button>                </>            ) : (                <>                    <Link href="/login">                        Login                    </Link>                    <Link href="/register">                        Register                    </Link>                </>            )}        </nav>    );};export default Navbar;"
- components\OngoingGame.js: "import React, { useState, useEffect } from "react";import { database } from "../firebase";import Clock from "./Clock";const OngoingGame = () => {    const [game, setGame] = useState(null);    useEffect(() => {        const gameRef = database.ref("game");        gameRef.on("value", (snapshot) => {            setGame(snapshot.val());        });        return () => {            gameRef.off();        };    }, []);    if (!game) {        return <div>Loading...</div>;    }    return (        <div className="ongoing-game">            <h2>Ongoing Game</h2>            <Clock game={game} />        </div>    );};export default OngoingGame;"
- components\RegisterForm.js: "import { useState } from 'react';import { createUserWithEmailAndPassword } from 'firebase/auth';import { useRouter } from 'next/router';import { auth } from '../firebase'; // Import the auth instanceconst RegisterForm = () => {    const [email, setEmail] = useState('');    const [password, setPassword] = useState('');    const [error, setError] = useState('');    const router = useRouter();    const handleSubmit = async (e) => {        e.preventDefault();        try {            await createUserWithEmailAndPassword(auth, email, password); // Use the imported auth instance            router.push('/');        } catch (err) {            setError(err.message);        }    };    return (        <form onSubmit={handleSubmit}>            <h2>Register</h2>            {error && <p>{error}</p>}            <input                type="email"                placeholder="Email"                value={email}                onChange={(e) => setEmail(e.target.value)}            />            <input                type="password"                placeholder="Password"                value={password}                onChange={(e) => setPassword(e.target.value)}            />            <button type="submit">Register</button>        </form>    );};export default RegisterForm;"
- components\useTimer.js: "// components\useTimer.jsimport { useState, useEffect } from "react";import { ref, update } from 'firebase/database';import { db } from '../firebase';const useTimer = (game) => {  const [time, setTime] = useState(game.time);  const [extraTime, setExtraTime] = useState(game.extraTime);  const [isRunning, setIsRunning] = useState(false);  const updateTimer = async (newTime, extraTime) => {    const gameRef = ref(db, `games/${game.id}`);    try {      await update(gameRef, {        time: newTime,        extraTime: extraTime,      });    } catch (error) {      console.error(error.message);    }  };  useEffect(() => {    setTime(game.time);    setExtraTime(game.extraTime);  }, [game]);  useEffect(() => {    let timer;    if (isRunning) {      timer = setInterval(() => {        setTime((prevTime) => {          const newTime = prevTime + 1;          updateTimer(newTime, extraTime);          return newTime;        });        if (extraTime > 0) {          setExtraTime((prevExtraTime) => {            const newExtraTime = prevExtraTime - 1;            updateTimer(time, newExtraTime);            return newExtraTime;          });        }      }, 1000);    }    return () => {      if (timer) clearInterval(timer);    };  }, [isRunning, extraTime, time, updateTimer]);  return { time, extraTime, setTime, setExtraTime, isRunning, setIsRunning };};export default useTimer;"
- pages\admin.js: "import Head from 'next/head';import Navbar from '../components/Navbar';import AddGameForm from '../components/AddGameForm';import { useState, useEffect } from 'react';import { getAuth, onAuthStateChanged } from 'firebase/auth';export default function Admin() {    const [user, setUser] = useState(null);    useEffect(() => {        const auth = getAuth();        const unsubscribe = onAuthStateChanged(auth, (user) => {            setUser(user);        });        return () => {            unsubscribe();        };    }, []);    return (        <div>            <Head>                <title>Admin - Live Sports Clock</title>                <meta name="description" content="Admin dashboard for managing games on Live Sports Clock" />                <link rel="icon" href="/favicon.ico" />            </Head>            <Navbar user={user} />            <main>                {user ? (                    <AddGameForm />                ) : (                    <p>You must be logged in to view this page.</p>                )}            </main>        </div>    );}"
- pages\index.js: "import Head from 'next/head';import Navbar from '../components/Navbar';import GameList from '../components/GameList';import { useState, useEffect } from 'react';import { getAuth, onAuthStateChanged } from 'firebase/auth';export default function Home() {  const [user, setUser] = useState(null);  useEffect(() => {    const auth = getAuth();    const unsubscribe = onAuthStateChanged(auth, (user) => {      setUser(user);    });    return () => {      unsubscribe();    };  }, []);  return (    <div>      <Head>        <title>Live Sports Clock</title>        <meta name="description" content="Live sports clock for soccer broadcasts" />        <link rel="icon" href="/favicon.ico" />      </Head>      <Navbar user={user} />      <main>        <GameList />      </main>    </div>  );}"
- pages\login.js: "import Head from 'next/head';import Navbar from '../components/Navbar';import LoginForm from '../components/LoginForm';import { getAuth, onAuthStateChanged } from 'firebase/auth';import { useEffect, useState } from "react";export default function Login() {    const [user, setUser] = useState(null);    useEffect(() => {        const auth = getAuth();        const unsubscribe = onAuthStateChanged(auth, (user) => {            setUser(user);        });        return () => {            unsubscribe();        };    }, []);    return (        <div>            <Head>                <title>Login - Live Sports Clock</title>                <meta name="description" content="Login page for Live Sports Clock" />                <link rel="icon" href="/favicon.ico" />            </Head>            <Navbar user={user} />            <main>                <LoginForm />            </main>        </div>    );}"
- pages\register.js: "import Head from 'next/head';import Navbar from '../components/Navbar';import RegisterForm from '../components/RegisterForm';import { getAuth, onAuthStateChanged } from 'firebase/auth';import { useEffect, useState } from "react";export default function Register() {    const [user, setUser] = useState(null);    useEffect(() => {        const auth = getAuth();        const unsubscribe = onAuthStateChanged(auth, (user) => {            setUser(user);        });        return () => {            unsubscribe();        };    }, []);    return (        <div>            <Head>                <title>Register - Live Sports Clock</title>                <meta name="description" content="Registration page for Live Sports Clock" />                <link rel="icon" href="/favicon.ico" />            </Head>            <Navbar user={user} />            <main>                <RegisterForm />            </main>        </div>    );}"
- pages\_app.js: "import '@/styles/globals.css'export default function App({ Component, pageProps }) {  return <Component {...pageProps} />}"
- pages\_document.js: "import { Html, Head, Main, NextScript } from 'next/document'export default function Document() {  return (    <Html lang="en">      <Head />      <body>        <Main />        <NextScript />      </body>    </Html>  )}"
- functions\index.js: "const functions = require('firebase-functions');const admin = require('firebase-admin');admin.initializeApp();const db = admin.database();exports.updateGameTime = functions.database    .ref('/games/{gameId}')    .onUpdate(async (change, context) => {        const gameId = context.params.gameId;        const gameData = change.after.val();        if (gameData.running) {            const updatedTime = gameData.time + 1;            const gameRef = db.ref(`games/${gameId}`);            try {                await gameRef.update({ time: updatedTime });            } catch (err) {                console.error(err.message);            }        }    });"
